events {
    worker_connections 1024;
}

http {
    upstream mcp_backend {
        server localhost:3000;
        # Add more servers for load balancing
        # server localhost:3001;
        # server localhost:3002;
    }
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=health:10m rate=1r/s;
    
    server {
        listen 80;
        server_name _;  # Accept any hostname/IP
        
        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Accept, Mcp-Session-Id, Last-Event-ID";
        add_header Access-Control-Expose-Headers "Mcp-Session-Id";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Accept, Mcp-Session-Id, Last-Event-ID";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # Health check endpoint with rate limiting
        location /health {
            limit_req zone=health burst=5 nodelay;
            proxy_pass http://mcp_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # MCP endpoint with rate limiting
        location /mcp {
            limit_req zone=api burst=20 nodelay;
            
            # Proxy to backend
            proxy_pass http://mcp_backend/mcp;
            proxy_http_version 1.1;
            
            # Headers for MCP protocol
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SSE support
            proxy_set_header Connection '';
            proxy_set_header Cache-Control 'no-cache';
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }
        
        # Block other endpoints
        location / {
            return 404;
        }
        
        # Logging
        access_log /var/log/nginx/mcp_access.log;
        error_log /var/log/nginx/mcp_error.log;
    }
}